[{"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/index.js":"1","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/App.js":"2","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/serviceWorker.js":"3","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/store/reducers/todo.js":"4","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/containers/TodoList/TodoList.js":"5","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/components/TodoDetail/TodoDetail.js":"6","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js":"7","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/store/actions/actionTypes.js":"8","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/components/Todo/Todo.js":"9","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/routerCode/withRouterSample.js":"10","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/containers/TodoList/RealDetail/RealDetail.js":"11","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/store/actions/index.js":"12","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/store/actions/todo.js":"13"},{"size":807,"mtime":1657110098501,"results":"14","hashOfConfig":"15"},{"size":888,"mtime":1657071569830,"results":"16","hashOfConfig":"15"},{"size":4951,"mtime":1656662103358,"results":"17","hashOfConfig":"15"},{"size":1552,"mtime":1657171534858,"results":"18","hashOfConfig":"15"},{"size":2444,"mtime":1657172587629,"results":"19","hashOfConfig":"15"},{"size":689,"mtime":1657056230867,"results":"20","hashOfConfig":"15"},{"size":1279,"mtime":1657172239839,"results":"21","hashOfConfig":"15"},{"size":193,"mtime":1656665622553,"results":"22","hashOfConfig":"15"},{"size":491,"mtime":1657074311004,"results":"23","hashOfConfig":"15"},{"size":435,"mtime":1657047837042,"results":"24","hashOfConfig":"15"},{"size":1843,"mtime":1657172246117,"results":"25","hashOfConfig":"15"},{"size":77,"mtime":1657171601638,"results":"26","hashOfConfig":"15"},{"size":1425,"mtime":1657173382503,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"gptbai",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/index.js",[],["59","60"],"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/App.js",["61","62","63"],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route, Navigate, Redirect, Switch } from 'react-router-dom';\nimport TodoList from './containers/TodoList/TodoList';\nimport TodoDetail from './components/TodoDetail/TodoDetail';\nimport RealDetail from './containers/TodoList/RealDetail/RealDetail';\nimport NewTodo from './containers/TodoList/NewTodo/NewTodo';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className='App'>\n      <Routes>\n        <Route path='/todos' exact element={<TodoList title='My TODOs!' />} />\n        <Route path='/todos/:id' exact element={<RealDetail />} />\n        <Route path='/new-todo' exact element={<NewTodo />} />\n        <Route path='/' element={<Navigate replace to='/todos' />} />\n        <Route path='*' element={<h1>Not Found</h1>} />\n      </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/serviceWorker.js",[],"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/store/reducers/todo.js",[],"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/containers/TodoList/TodoList.js",["64","65","66"],"import React, { useState, useEffect, Component } from 'react';\nimport {connect} from 'react-redux';\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport WithRouter from '../../routerCode/withRouterSample';\nimport * as actionCreators from '../../store/actions/index';\nimport './TodoList.css';\n\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nconst TodoList = (props) => {\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    props.onGetAll();\n    axios.get('/api/todo/')\n      .then(result => console.log(result))\n      .catch(err => console.log(err));\n  }, [])\n\n  const defaultState = {\n    todos: [\n      { id: 1, title: 'SWPP', content: 'take swpp class', done: true },\n      { id: 2, title: 'Movie', content: 'watch movie', done: false },\n      { id: 3, title: 'Dinner', content: 'eat dinner', done: false }\n    ],\n    selectedTodo: null,\n  }\n\n  const [state, setState] = useState(defaultState);\n\n  const todos = props.storedTodos.map((td) => {\n    return (\n      <Todo\n        key={td.id}\n        title={td.title}\n        done={td.done}\n        clickDetail={() => {\n          console.log('click todo handler');\n          navigate('/todos/' + td.id);\n        }}\n        clickDone={() => props.onToggleTodo(td.id)}\n        clickDelete={() => props.onDeleteTodo(td.id)}\n      />);\n  });\n\n  let todo = null;\n  if (state.selectedTodo) {\n    todo = <TodoDetail\n      title={state.selectedTodo.title}\n      content={state.selectedTodo.content}\n    />\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <div className=\"title\">{props.title}</div>\n      <div>\n        {todos.length > 0 ? \n          <div className=\"todos\">{todos}</div> : <h3>No TODOs</h3>}\n      </div>\n      {todo}\n      <div className=\"BottomLink\">\n        <NavLink to='/new-todo' exact>\n            <button className=\"btn\">\n                New Todo\n            </button>\n        </NavLink>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleTodo: (id) =>  \n      dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: (id) => \n      dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () => \n      dispatch(actionCreators.getTodos())\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithRouter(TodoList));\n\n\n\n","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/components/TodoDetail/TodoDetail.js",[],"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js",["67"],"import React, { useState, Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport './NewTodo.css';\nimport * as actionCreators from '../../../store/actions/index';\n\nconst NewTodo = (props) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  const postTodoHandler = () => {\n    props.onStoreTodo(title, content);\n    setSubmitted(true);\n  }\n\n  let redirect = null;\n  if (submitted) {\n    return <Navigate replace to='/todos' />;\n  }\n\n  return (\n    <div className=\"NewTodo\">\n      {redirect}\n      <h1>Add a Todo</h1>\n      <label>Title</label>\n      <input type=\"text\" value={title}\n        onChange={(event) => setTitle(event.target.value )} />\n      <br></br>\n      <label>Content</label>\n      <textarea rows=\"4\" type=\"text\" value={content}\n        onChange={(event) => setContent(event.target.value)} />\n      <button onClick={() => postTodoHandler()}>Submit</button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onStoreTodo: (title, content) => \n      dispatch(actionCreators.postTodo({title: title, content: content}))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewTodo);","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/store/actions/actionTypes.js",[],"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/components/Todo/Todo.js",[],"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/routerCode/withRouterSample.js",[],"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/containers/TodoList/RealDetail/RealDetail.js",["68","69","70"],"import React, { useState, useEffect, Component } from 'react';\nimport {connect} from 'react-redux';\nimport { useParams, NavLink } from 'react-router-dom';\nimport WithRouter from '../../../routerCode/withRouterSample';\nimport * as actionCreators from '../../../store/actions/index';\n\nimport './RealDetail.css';\n\nconst RealDetail = (props) => {\n    const { id } = useParams();\n    useEffect(() => {\n        props.onGetTodo(parseInt(id));\n    }, []);\n\n    let title = ''; let content = '';\n    if (props.selectedTodo) {\n        title = props.selectedTodo.title;\n        content = props.selectedTodo.content;\n    }\n\n    return (\n        <div className=\"RealDetailBox\">\n            <div className=\"title\">TODO Detail</div>\n            <div className=\"RealDetail\" >\n                <div className=\"row\">\n                    <div className=\"left\">\n                        Name:\n                    </div>\n                    <div className=\"right\">\n                        {title}\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"left\">\n                        Content:\n                    </div>\n                    <div className=\"right\">\n                        {content}\n                    </div>\n                </div>\n            <div className=\"BottomLink\">    \n                <NavLink to='/todos' exact>\n                    <button>Back</button>\n                </NavLink>\n            </div>\n        </div >\n      </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedTodo: state.td.selectedTodo\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGetTodo: (id) => \n            dispatch(actionCreators.getTodo(id))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithRouter(RealDetail));\n","/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/store/actions/index.js",[],"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/store/actions/todo.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":50,"nodeType":"77","messageId":"78","endLine":3,"endColumn":58},{"ruleId":"75","severity":1,"message":"79","line":3,"column":60,"nodeType":"77","messageId":"78","endLine":3,"endColumn":66},{"ruleId":"75","severity":1,"message":"80","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":18},{"ruleId":"75","severity":1,"message":"81","line":1,"column":38,"nodeType":"77","messageId":"78","endLine":1,"endColumn":47},{"ruleId":"82","severity":1,"message":"83","line":20,"column":6,"nodeType":"84","endLine":20,"endColumn":8,"suggestions":"85"},{"ruleId":"75","severity":1,"message":"86","line":31,"column":17,"nodeType":"77","messageId":"78","endLine":31,"endColumn":25},{"ruleId":"75","severity":1,"message":"81","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"87","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"81","line":1,"column":38,"nodeType":"77","messageId":"78","endLine":1,"endColumn":47},{"ruleId":"82","severity":1,"message":"88","line":13,"column":8,"nodeType":"84","endLine":13,"endColumn":10,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'TodoDetail' is defined but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["92"],"'setState' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [props]",{"range":"98","text":"99"},"Update the dependencies array to be: [id, props]",{"range":"100","text":"101"},[664,666],"[props]",[443,445],"[id, props]"]