{"ast":null,"code":"var _jsxFileName = \"/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport './NewTodo.css';\nimport * as actionTypes from '../../../store/actions/actionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewTodo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '',\n      submitted: false\n    };\n\n    this.postTodoHandler = () => {\n      this.props.onStoreTodo(this.state.title, this.state.content);\n      this.setState({\n        submitted: true\n      });\n    };\n  }\n\n  render() {\n    let redirect = null;\n\n    if (this.state.submitted) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: \"/todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewTodo\",\n      children: [redirect, /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.title,\n        onChange: event => this.setState({\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        type: \"text\",\n        value: this.state.content,\n        onChange: event => this.setState({\n          content: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.postTodoHandler(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStoreTodo: (title, content) => dispatch({\n      type: actionTypes.ADD_TODO,\n      title: title,\n      content: content\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewTodo);","map":{"version":3,"sources":["/Users/joeychun/github/BlogApp/swppfall2020/react_redux_tutorial/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js"],"names":["React","Component","connect","Navigate","actionTypes","NewTodo","state","title","content","submitted","postTodoHandler","props","onStoreTodo","setState","render","redirect","event","target","value","mapDispatchToProps","dispatch","type","ADD_TODO"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,eAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,oCAA7B;;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BK,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADsB;;AAAA,SAO9BC,eAP8B,GAOZ,MAAM;AACtB,WAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKN,KAAL,CAAWC,KAAlC,EAAyC,KAAKD,KAAL,CAAWE,OAApD;AACA,WAAKK,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAV6B;AAAA;;AAY9BK,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKT,KAAL,CAAWG,SAAf,EAA0B;AACxB,0BAAO,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBACGM,QADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAArC;AACE,QAAA,QAAQ,EAAGS,KAAD,IAAW,KAAKH,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAES,KAAK,CAACC,MAAN,CAAaC;AAAtB,SAAd;AADvB;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,OAAjD;AACE,QAAA,QAAQ,EAAGQ,KAAD,IAAW,KAAKH,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AAAxB,SAAd;AADvB;AAAA;AAAA;AAAA;AAAA,cAPF,eASE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKR,eAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA9B6B;;AAiChC,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLR,IAAAA,WAAW,EAAE,CAACL,KAAD,EAAQC,OAAR,KAAoBY,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEjB,WAAW,CAACkB,QAAnB;AAA6Bf,MAAAA,KAAK,EAAEA,KAApC;AAA2CC,MAAAA,OAAO,EAAEA;AAApD,KAAD;AADpC,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCd,OAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport './NewTodo.css';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\nclass NewTodo extends Component {\n  state = {\n    title: '',\n    content: '',\n    submitted: false,\n  }\n\n  postTodoHandler = () => {\n    this.props.onStoreTodo(this.state.title, this.state.content);\n    this.setState({ submitted: true });\n  }\n\n  render() {\n    let redirect = null;\n    if (this.state.submitted) {\n      return <Navigate replace to='/todos' />;\n    }\n    return (\n      <div className=\"NewTodo\">\n        {redirect}\n        <h1>Add a Todo</h1>\n        <label>Title</label>\n        <input type=\"text\" value={this.state.title}\n          onChange={(event) => this.setState({ title: event.target.value })} />\n        <label>Content</label>\n        <textarea rows=\"4\" type=\"text\" value={this.state.content}\n          onChange={(event) => this.setState({ content: event.target.value })} />\n        <button onClick={() => this.postTodoHandler()}>Submit</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onStoreTodo: (title, content) => dispatch({type: actionTypes.ADD_TODO, title: title, content: content})\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(NewTodo);"]},"metadata":{},"sourceType":"module"}